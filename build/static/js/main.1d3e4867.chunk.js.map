{"version":3,"sources":["services/httpService.jsx","services/authService.js","services/genreServices.js","services/movieService.js","components/common/pagination.jsx","components/common/listGroup.jsx","utils/paginate.js","components/common/favorite.jsx","components/common/tableBody.jsx","components/common/tableHeader.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/searchBox.jsx","components/movies.jsx","components/common/navBar.jsx","components/common/notFound.jsx","components/costumers.jsx","components/rentals.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/register.jsx","components/common/logout.jsx","components/common/protectedRoute.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","toast","Promise","reject","get","post","put","delete","setJWT","jwt","headers","common","apiEndpoint","tokenKey","login","email","password","a","http","data","localStorage","setItem","loginWithJWT","getCurrentUser","getItem","jwtDecode","e","getGenres","deleteMovie","id","saveMovie","movie","_id","body","Pagination","props","itemCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","_","range","className","map","page","onClick","ListGroup","items","onItemSelect","selectedItem","valueprop","textprop","item","defaultProps","paginate","pageNumber","selectedGenre","index","slice","take","value","Favorite","classes","liked","onClickLike","style","cursor","aria-hidden","TableBody","renderCell","column","content","path","createKey","key","this","columns","Component","TableHeader","raiseSort","sortColumn","order","onSort","renderSortIcon","c","label","Table","MoviesTable","Link","to","title","onLike","user","isAdmin","push","onDelete","movies","SearchBox","onChange","type","name","placeholder","currentTarget","Movies","state","genres","searchQuery","sortHandler","setState","handlePageChange","likeHandler","indexOf","getPagedData","allMovies","filtred","filter","m","toLowerCase","startsWith","genre","orderBy","totalCount","length","handleSearch","query","deleteHandler","originalMovies","handleGenreSelection","handleSave","history","filteredMovies","NavBar","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","NotFound","Costumers","Rentals","Input","rest","htmlFor","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMsg","renderButton","disabled","renderInput","renderSelect","MovieForm","dailyRentalRate","numberInStock","genreId","string","required","number","min","max","movieId","match","params","mapToViewModel","replace","onSubmit","LoginForm","username","location","window","from","pathname","Redirect","register","Register","alphanum","userService","Logout","removeItem","ProtectedRoute","component","render","Route","App","Switch","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","BrowserRouter","document","getElementById"],"mappings":"mWAGAA,IAAMC,SAASC,QAAUC,gDAMzBH,IAAMI,aAAaC,SAASC,IAAI,MAAM,SAAAC,GAMlC,OALsBA,EAAMF,UAAYE,EAAMF,SAASG,QAAU,KAAOD,EAAMF,SAASG,OAAS,MAE5FC,QAAQC,IAAIH,GACZI,QAAMJ,MAAM,0BAETK,QAAQC,OAAON,MAIX,OACXO,IAAKd,IAAMc,IACXC,KAAMf,IAAMe,KACZC,IAAKhB,IAAMgB,IACXC,OAAQjB,IAAMiB,OACdC,OAnBG,SAAgBC,GACnBnB,IAAMC,SAASmB,QAAQC,OAAO,gBAAkBF,I,iBCF9CG,EAAc,QACdC,EAAW,QAEV,SAAeC,EAAtB,oC,4CAAO,WAAqBC,EAAOC,GAA5B,iBAAAC,EAAA,sEACyBC,EAAKb,KAAKO,EAAa,CAC/C,MAASG,EACT,SAAYC,IAHb,gBACWP,EADX,EACKU,KAIRC,aAAaC,QAAQR,EAAUJ,GAL5B,4C,sBAQA,SAAea,EAAtB,kC,4CAAO,WAA4Bb,GAA5B,SAAAQ,EAAA,sDACHG,aAAaC,QAAQR,EAAUJ,GAD5B,4C,sBAYA,SAASc,IACZ,IACIxB,QAAQC,IAAI,kBACZ,IAAMS,EAAMW,aAAaI,QAAQX,GAGjC,OAFAd,QAAQC,IAAI,MAAQS,GAEbgB,IAAUhB,GACnB,MAAOiB,GACL,OAAO,MAVfR,EAAKV,OAJMY,aAAaI,QAAQX,I,YClBzB,SAASc,IACZ,OAAOT,EAAKd,IAAI,WCApB,IAAMQ,EAAc,UAMb,SAASgB,EAAYC,GACxB,OAAOX,EAAKX,OAAOK,WAAoBiB,GAOpC,SAASC,EAAUC,GAEtB,GAAIA,EAAMC,IAAK,CACX,IAAMC,EAAI,eAAQF,GAElB,cADOE,EAAKD,IACLd,EAAKZ,IAAIM,WAAoBmB,EAAMC,IAAKC,GAGnD,OAAOf,EAAKb,KAAKO,EAAamB,G,qBCQnBG,EA7BI,SAACC,GAAW,IACnBC,EAAmDD,EAAnDC,UAAWC,EAAwCF,EAAxCE,SAAUC,EAA8BH,EAA9BG,YAAaC,EAAiBJ,EAAjBI,aACpCC,EAAYC,KAAKC,KAAKN,EAAYC,GACxC,GAAkB,IAAdG,EAAiB,OAAO,KAC5B,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAY,GAErC,OACI,8BACI,oBAAIM,UAAU,aAAd,SACKH,EAAMI,KAAI,SAAAC,GAAI,OACX,oBAAIF,UAAWE,IAASV,EAAc,mBAAqB,YAA3D,SACI,mBACIQ,UAAU,YACVG,QAAS,kBAAMV,EAAaS,IAFhC,SAGKA,KAJoEA,WCZ3FE,EAAY,SAACf,GAAW,IAClBgB,EAA2DhB,EAA3DgB,MAAOC,EAAoDjB,EAApDiB,aAAcC,EAAsClB,EAAtCkB,aAAcC,EAAwBnB,EAAxBmB,UAAWC,EAAapB,EAAboB,SACtD,OACI,oBAAIT,UAAU,aAAd,SACKK,EAAMJ,KAAI,SAAAS,GAAI,OACX,oBAEIV,UAAWO,IAAiBG,EAAO,yBAA2B,kBAC9DP,QAAS,kBAAMG,EAAaI,IAHhC,SAIKA,EAAKD,IAHDC,EAAKF,UAS9BJ,EAAUO,aAAe,CACrBH,UAAW,MACXC,SAAU,QAGCL,QCrBR,SAASQ,EAASP,EAAOQ,EAAYtB,EAAUuB,GAClD,IAAMC,GAASF,EAAa,GAAKtB,EACjC,OAAOO,IAAEO,GACJW,MAAMD,GACNE,KAAK1B,GACL2B,QCLT,IAaeC,EAbE,SAAC9B,GACd,IAAI+B,EAAU,cAGd,OAFK/B,EAAMgC,QACPD,GAAW,MAEX,mBACIjB,QAASd,EAAMiC,YACftB,UAAWoB,EACXG,MAAO,CAAEC,OAAQ,WACjBC,cAAY,UCuBTC,E,4MA7BXC,WAAa,SAACjB,EAAMkB,GAChB,OAAIA,EAAOC,QACAD,EAAOC,QAAQnB,GACnBZ,IAAExC,IAAIoD,EAAMkB,EAAOE,O,EAG9BC,UAAY,SAACrB,EAAMkB,GACf,OAAOlB,EAAKxB,KAAO0C,EAAOE,MAAQF,EAAOI,M,uDAGnC,IAAD,SACqBC,KAAK5C,MAAvBhB,EADH,EACGA,KAAM6D,EADT,EACSA,QACd,OACI,gCACK7D,EAAK4B,KAAI,SAACS,GAAD,OACN,6BACKwB,EAAQjC,KAAI,SAAC2B,GAAD,OACT,6BACK,EAAKD,WAAWjB,EAAMkB,IADlB,EAAKG,UAAUrB,EAAMkB,QAF7BlB,EAAKxB,c,GAjBViD,aCqCTC,E,4MArCXC,UAAY,SAACP,GACT,IAAMQ,EAAU,eAAQ,EAAKjD,MAAMiD,YAE/BA,EAAWR,OAASA,EACpBQ,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,OAEzDD,EAAWR,KAAOA,EAClBQ,EAAWC,MAAQ,OAEvB,EAAKlD,MAAMmD,OAAOF,I,EAGtBG,eAAiB,SAACb,GAAY,IAClBU,EAAe,EAAKjD,MAApBiD,WACR,OAAIV,EAAOE,OAASQ,EAAWR,KAAa,KACnB,QAArBQ,EAAWC,MAAwB,mBAAGvC,UAAU,mBAC7C,mBAAGA,UAAU,qB,uDAGd,IAAD,OACL,OACI,gCACI,6BACKiC,KAAK5C,MAAM6C,QAAQjC,KAAI,SAAAyC,GAAC,OACrB,qBAAInB,MAAO,CAAEC,OAAQ,WAEjBrB,QAAS,kBAAM,EAAKkC,UAAUK,EAAEZ,OAFpC,UAGKY,EAAEC,MACF,EAAKF,eAAeC,KAHhBA,EAAEZ,MAAQY,EAAEV,gB,GA1BnBG,aCgBXS,EAdD,SAACvD,GAAW,IACd6C,EAAsC7C,EAAtC6C,QAASI,EAA6BjD,EAA7BiD,WAAYjE,EAAiBgB,EAAjBhB,KAAMmE,EAAWnD,EAAXmD,OACnC,OACI,wBAAOxC,UAAU,QAAjB,UACI,cAAC,EAAD,CACIkC,QAASA,EACTI,WAAYA,EACZE,OAAQA,IAEZ,cAAC,EAAD,CAAWnE,KAAMA,EAAM6D,QAASA,Q,QCqD7BW,E,kDAtCX,aAAe,IAAD,uBACV,gBApBJX,QAAU,CACN,CACIJ,KAAM,QACNa,MAAO,QACPd,QAAS,SAAA5C,GAAK,OACV,cAAC6D,EAAA,EAAD,CAAMC,GAAE,kBAAa9D,EAAMC,KAA3B,SACKD,EAAM+D,UAGnB,CAAElB,KAAM,aAAca,MAAO,SAC7B,CAAEb,KAAM,gBAAiBa,MAAO,SAChC,CAAEb,KAAM,kBAAmBa,MAAO,QAClC,CACIX,IAAK,OACLH,QAAS,SAAA5C,GAAK,OAAI,cAAC,EAAD,CACdoC,MAAOpC,EAAMoC,MACbC,YAAa,kBAAM,EAAKjC,MAAM4D,OAAOhE,SAK7C,IAAMiE,EAAOzE,IAFH,OAGNyE,GAAQA,EAAKC,UACblG,QAAQC,IAAI,iBACZ,EAAKgF,QAAQkB,KAAK,CACdpB,IAAK,SACLH,QAAS,SAAA5C,GAAK,OAAI,wBACde,UAAU,wBACVG,QAAS,WAAQ,EAAKd,MAAMgE,SAASpE,IAFvB,wBAPhB,E,qDAcJ,IAAD,EACkCgD,KAAK5C,MAApCiE,EADH,EACGA,OAAQhB,EADX,EACWA,WAAYE,EADvB,EACuBA,OAC5B,OACI,cAAC,EAAD,CAAON,QAASD,KAAKC,QACjBI,WAAYA,EACZE,OAAQA,EACRnE,KAAMiF,Q,GAzCInB,aCOXoB,EAbG,SAAC,GAAyB,IAAvBrC,EAAsB,EAAtBA,MAAOsC,EAAe,EAAfA,SACxB,OACI,uBACIC,KAAK,OACLC,KAAK,QACL1D,UAAU,mBACV2D,YAAY,aACZzC,MAAOA,EACPsC,SAAU,SAAA5E,GAAC,OAAI4E,EAAS5E,EAAEgF,cAAc1C,WCiJrC2C,E,4MA5IXC,MAAQ,CACJR,OAAQ,GACRS,OAAQ,GACRvE,YAAa,EACbD,SAAU,EACV+C,WAAY,CAAER,KAAM,QAASS,MAAO,OACpCzB,cAAe,KACfkD,YAAa,I,EA2DjBC,YAAc,SAAC3B,GACX,EAAK4B,SAAS,CAAE5B,gB,EAGpB6B,iBAAmB,SAACjE,GAChB,EAAKgE,SAAS,CAAE1E,YAAaU,IAC7BjD,QAAQC,IAAI,qB,EAGhBkH,YAAc,SAACnF,GACX,IAAMqE,EAAM,YAAO,EAAKQ,MAAMR,QACxBvC,EAAQuC,EAAOe,QAAQpF,GAC7BqE,EAAOvC,GAAP,eAAqBuC,EAAOvC,IAE5BuC,EAAOvC,GAAOM,OAAQpC,EAAMoC,QAASpC,EAAMoC,MAC3C,EAAK6C,SAAS,CAAEZ,WAChBrG,QAAQC,IAAI,Y,EAGhBoH,aAAe,WAAO,IAAD,EAOS,EAAKR,MAL3BtE,EAFa,EAEbA,YACAD,EAHa,EAGbA,SACA+C,EAJa,EAIbA,WACAxB,EALa,EAKbA,cACAkD,EANa,EAMbA,YACQO,EAPK,EAObjB,OACAkB,EAAUD,EACVP,EACAQ,EAAUD,EAAUE,QAAO,SAAAC,GAAC,OACxBA,EAAE1B,MAAM2B,cAAcC,WAAWZ,EAAYW,kBAC5C7D,GAAiBA,EAAc5B,MACpCsF,EAAUD,EAAUE,QAAO,SAAAC,GAAC,OAAIA,EAAEG,MAAM3F,MAAQ4B,EAAc5B,QAElE,IACMoE,EAAS1C,EADAd,IAAEgF,QAAQN,EAAS,CAAClC,EAAWR,MAAO,CAACQ,EAAWC,QACjC/C,EAAaD,GAC7C,MAAO,CAAEwF,WAAYP,EAAQQ,OAAQ3G,KAAMiF,I,EAG/CW,YAAc,SAAC3B,GACX,EAAK4B,SAAS,CAAE5B,gB,EAGpB2C,aAAe,SAACC,GACZ,EAAKhB,SAAS,CAAEpD,cAAe,KAAMkD,YAAakB,EAAO1F,YAAa,K,EAG1E2F,c,uCAAgB,WAAOlG,GAAP,iBAAAd,EAAA,6DACNiH,EAAiB,EAAKtB,MAAMR,OAC5BA,EAAS8B,EAAeX,QAAO,SAAAC,GAAC,OAAIA,EAAExF,MAAQD,EAAMC,OAC1D,EAAKgF,SAAS,CAAEZ,WAHJ,kBAMFxE,EAAYG,EAAMC,KANhB,uDASJ,KAAIrC,UAAoC,MAAxB,KAAIA,SAASG,QAC7BG,QAAMJ,MAAM,iCAChB,EAAKmH,SAAS,CAAEZ,OAAQ8B,IAXhB,yD,wDAehBC,qBAAuB,SAACR,GACpB,EAAKX,SAAS,CAAEpD,cAAe+D,EAAOrF,YAAa,EAAGwE,YAAa,KAGnE/G,QAAQC,IAAI,yB,EAEhBoI,WAAa,WACT,EAAKjG,MAAMkG,QAAQnC,KAAK,Y,0MA5HDvE,I,uBAAfR,E,EAAAA,KACF0F,E,CAAU,CAAE7E,IAAK,GAAIwE,KAAM,e,mBAAmBrF,I,SVnBjDD,EAAKd,IAAIQ,G,gBUoBEwF,E,EAANjF,KACR4D,KAAKiC,SAAS,CAAEZ,SAAQS,W,sIAGE9B,KAAK6B,MAAMR,OAA7B0B,OADF,IAEE9B,EAASjB,KAAK5C,MAAd6D,KAFH,EAIwFjB,KAAK6B,MAA1FE,EAJH,EAIGA,YAAaxE,EAJhB,EAIgBA,YAAaD,EAJ7B,EAI6BA,SAAkBgF,EAJ/C,EAIuCjB,OAAmBxC,EAJ1D,EAI0DA,cAAewB,EAJzE,EAIyEA,WAExEkD,EAAiB1E,GAAiBA,EAAc5B,IAChDqF,EAAUE,QAAO,SAAAC,GAAC,OAAIA,EAAEG,MAAM3F,MAAQ4B,EAAc5B,OACpDqF,EAEAjB,EAAS1C,EADMd,IAAEgF,QAAQU,EAAgB,CAAClD,EAAWR,MAAO,CAACQ,EAAWC,QACxC/C,EAAaD,GACnD,OACI,sBAAKS,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CACIK,MAAO4B,KAAK6B,MAAMC,OAGlBzD,aAAc2B,KAAKoD,qBACnB9E,aAAcO,MAEtB,sBAAKd,UAAU,MAAf,UAEI,cAAC,EAAD,CAAWkB,MAAO8C,EAAaR,SAAUvB,KAAKgD,eAC7C/B,GAAS,cAACJ,EAAA,EAAD,CACN9C,UAAU,kBACV+C,GAAG,cAFG,wBAKV,4CAAeyC,EAAeR,OAA9B,aAEA,cAAC,EAAD,CACI1B,OAAQA,EACRD,SAAUpB,KAAKkD,cACflC,OAAQhB,KAAKmC,YACb5B,OAAQP,KAAKgC,YACb3B,WAAYA,IAGhB,cAAC,EAAD,CACIhD,UAAWkG,EAAeR,OAC1BzF,SAAUA,EACVC,YAAaA,EACbC,aAAcwC,KAAKkC,6B,GA5DtBhC,a,QCgENsD,EAzEA,SAAC,GAAc,IAAZvC,EAAW,EAAXA,KAEd,OACI,qBAAKlD,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,cAAC8C,EAAA,EAAD,CAAM9C,UAAU,eAAe+C,GAAG,IAAlC,oBAEA,wBAAQ/C,UAAU,iBAAiByD,KAAK,SAASiC,iBAAe,WAAWC,iBAAe,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,oBAA5L,SACI,sBAAM9F,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BjB,GAAG,yBAA7C,SACI,qBAAIiB,UAAU,kCAAd,UAEI,cAAC+F,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,UAFP,oBAOA,cAACgD,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,aAFP,uBAOA,cAACgD,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,WAFP,sBAOEG,GAAS,eAAC,IAAM8C,SAAP,WACP,cAACD,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,SAFP,mBAOA,cAACgD,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,YAFP,yBAQHG,GAAS,eAAC,IAAM8C,SAAP,WACN,cAACD,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,WAFP,SAIKG,EAAKQ,OAGV,cAACqC,EAAA,EAAD,CACI/F,UAAU,oBACV+C,GAAG,UAFP,mCCnDbkD,EATE,WACb,OACI,8BACI,6CCSGC,G,4MAZXpC,MAAQ,G,uDAEJ,OACI,8BACI,iD,GALQ3B,aCWTgE,GAVC,WACZ,OACI,8BACI,4C,8CCeGC,GAlBD,SAAC,GAAqC,IAAnC1C,EAAkC,EAAlCA,KAAMf,EAA4B,EAA5BA,MAAO5F,EAAqB,EAArBA,MAAUsJ,EAAW,yCAC/C,OACI,sBAAKrG,UAAU,aAAf,UACI,uBAAOsG,QAAS5C,EAAhB,SAAuBf,IACvB,iDAEQ0D,GAFR,IAGI3C,KAAMA,EACN3E,GAAI2E,EACJ1D,UAAU,kBAEZjD,GAAS,qBAAKiD,UAAU,qBAAf,SACNjD,QCKFwJ,GAjBA,SAAC,GAA8C,IAA5C7C,EAA2C,EAA3CA,KAAMf,EAAqC,EAArCA,MAAO6D,EAA8B,EAA9BA,QAASzJ,EAAqB,EAArBA,MAAUsJ,EAAW,mDACzD,OACI,sBAAKrG,UAAU,aAAf,UACI,uBAAOsG,QAAS5C,EAAhB,SAAuBf,IACvB,iDAAQe,KAAMA,EAAM3E,GAAI2E,GAAU2C,GAAlC,IAAwCrG,UAAU,eAAlD,UACI,wBAAQkB,MAAM,KACbsF,EAAQvG,KAAI,SAAAwG,GAAM,OACf,wBAAyBvF,MAAOuF,EAAOvH,IAAvC,SACKuH,EAAO/C,MADC+C,EAAOvH,YAK3BnC,GAAS,qBAAKiD,UAAU,qBAAf,SAAqCjD,QC0E5C2J,G,4MAlFX5C,MAAQ,CACJzF,KAAM,GACNsI,OAAQ,I,EAGZC,SAAW,WAAO,IACN7J,EAAU8J,KAAID,SAAS,EAAK9C,MAAMzF,KAAM,EAAKyI,OAAQ,CAAEC,YAAY,IAAnEhK,MAGR,GAFAE,QAAQC,IAAIH,GACZE,QAAQC,IAAI,kBAAoB,EAAK4G,MAAMzF,OACtCtB,EAAO,OAAO,KACnB,IALa,EAKP4J,EAAS,GALF,eAMI5J,EAAMiK,SANV,IAMb,gCAAStG,EAAT,QACIiG,EAAOjG,EAAKoB,KAAK,IAAMpB,EAAKuG,SAPnB,8BAQb,OAAON,G,EAQXO,iBAAmB,YAAsB,IAAnBxD,EAAkB,EAAlBA,KAAMxC,EAAY,EAAZA,MAClBiG,EAAG,gBAAMzD,EAAOxC,GAChB4F,EAAM,gBAAMpD,EAAO,EAAKoD,OAAOpD,IAC7B3G,EAAU8J,KAAID,SAASO,EAAKL,GAA5B/J,MACR,OAAOA,EAAQA,EAAMiK,QAAQ,GAAGC,QAAU,M,EAG9CG,aAAe,SAAAxI,GACXA,EAAEyI,iBACF,IAAMV,EAAS,EAAKC,WACpB,EAAK1C,SAAS,CACVyC,OAAQA,GAAU,KAElBA,IACJ,EAAKW,WACLrK,QAAQC,IAAI,a,EAEhBqK,aAAe,YAA+B,IAAbC,EAAY,EAA3B5D,cACR+C,EAAM,eAAQ,EAAK7C,MAAM6C,QACzBc,EAAW,EAAKP,iBAAiBM,GACnCC,EAAUd,EAAOa,EAAM9D,MAAQ+D,SACvBd,EAAOa,EAAM9D,MACzB,IAAMrF,EAAI,eAAQ,EAAKyF,MAAMzF,MAC7BA,EAAKmJ,EAAM9D,MAAQ8D,EAAMtG,MACzB,EAAKgD,SAAS,CAAE7F,OAAMsI,Y,EAG1Be,aAAe,SAAC/E,GACZ,OAAO,wBACHgF,SAAU,EAAKf,WACf5G,UAAU,kBAFP,SAGF2C,K,EAGTiF,YAAc,SAAClE,EAAMf,GAA0B,IAAnBc,EAAkB,uDAAX,OAAW,EACjB,EAAKK,MAAtBzF,EADkC,EAClCA,KAAMsI,EAD4B,EAC5BA,OACd,OACI,cAAE,GAAF,CACIlD,KAAMA,EACNC,KAAMA,EACNxC,MAAO7C,EAAKqF,GACZf,MAAOA,EACP5F,MAAO4J,EAAOjD,GACdF,SAAU,EAAK+D,gB,EAG3BM,aAAe,SAACnE,EAAMf,EAAO6D,GAAa,IAAD,EAEZ,EAAK1C,MAAtBzF,EAF6B,EAE7BA,KAAMsI,EAFuB,EAEvBA,OACd,OAAO,cAAC,GAAD,CACHjD,KAAMA,EACNxC,MAAO7C,EAAKqF,GACZf,MAAOA,EACP6D,QAASA,EACThD,SAAU,EAAK+D,aACfxK,MAAO4J,EAAOjD,M,YA7EPvB,aCmGJ2F,G,4MAhGXhE,MAAQ,CACJzF,KAAM,CACF2E,MAAO,GACP+E,gBAAiB,GACjBC,cAAe,GACfC,QAAS,IAEblE,OAAQ,GACR4C,OAAQ,I,EAEZG,OAAS,CACL5H,IAAK2H,KAAIqB,SACTlF,MAAO6D,KAAIqB,SACNC,WACAxF,MAAM,SACXsF,QAASpB,KAAIqB,SACRC,WACAxF,MAAM,SACXoF,gBAAiBlB,KAAIuB,SAChBC,IAAI,GACJC,IAAI,IACJH,WACAxF,MAAM,qBACXqF,cAAenB,KAAIuB,SACdC,IAAI,GACJC,IAAI,KACJH,WACAxF,MAAM,oB,EAgCf2E,S,sBAAW,sBAAAnJ,EAAA,sEACDa,EAAU,EAAK8E,MAAMzF,MADpB,OAEPpB,QAAQC,IAAI,cAAgB,EAAK4G,MAAMzF,MACvC,EAAKgB,MAAMkG,QAAQnC,KAAK,WACxBnG,QAAQC,IAAI,oBAJL,2C,0MA3BwB2B,I,mBAAjBkF,E,EAAN1F,KACR4D,KAAKiC,SAAS,CAAEH,WAIA,SADVwE,EAAUtG,KAAK5C,MAAMmJ,MAAMC,OAAO1J,I,2ElB9BvBA,EkBkC0BwJ,ElBjCxCnK,EAAKd,IAAIQ,WAAoBiB,G,iBkBiCdE,E,EAANZ,KACR4D,KAAKiC,SAAS,CAAE7F,KAAM4D,KAAKyG,eAAezJ,K,sDAGtC,KAAGpC,UAAmC,MAAvB,KAAGA,SAASG,O,0CACpBiF,KAAK5C,MAAMkG,QAAQoD,QAAQ,c,kClBvC3C,IAAkB5J,I,gHkB2CNE,GACX,MAAO,CACHC,IAAKD,EAAMC,IACX8D,MAAO/D,EAAM+D,MACbiF,QAAShJ,EAAM4F,MAAM3F,IACrB8I,cAAe/I,EAAM+I,cACrBD,gBAAiB9I,EAAM8I,mB,+BAW3B,OACI,gCACI,wCACA,uBAAMa,SAAU3G,KAAKmF,aAArB,UAEKnF,KAAK2F,YAAY,QAAS,SAC1B3F,KAAK4F,aAAa,UAAW,QAAS5F,KAAK6B,MAAMC,QACjD9B,KAAK2F,YAAY,gBAAiB,kBAAmB,UACrD3F,KAAK2F,YAAY,kBAAmB,QAEpC3F,KAAKyF,aAAa,kB,GA7EfhB,IC8CTmC,G,4MA9CX/E,MAAQ,CACJzF,KAAM,CACFyK,SAAU,GACV5K,SAAU,IAEdyI,OAAQ,I,EAEZG,OAAS,CACLgC,SAAUjC,KAAIqB,SAASC,WAAWxF,MAAM,YACxCzE,SAAU2I,KAAIqB,SAASC,WAAWxF,MAAM,a,EAG5C2E,S,sBAAW,gCAAAnJ,EAAA,sEAEKE,EAAS,EAAKyF,MAAdzF,KAFL,SAGGL,EAAMK,EAAKyK,SAAUzK,EAAKH,UAH7B,OAIK4F,EAAU,EAAKzE,MAAM0J,SAArBjF,MACRkF,OAAOD,SAAWjF,EAAQA,EAAMmF,KAAKC,SAAW,IAL7C,gDAOC,KAAGrM,UAAmC,MAAvB,KAAGA,SAASG,UACrB2J,EADqC,eACvB,EAAK7C,MAAM6C,SACxBmC,SAAW,KAAGjM,SAASwB,KAC9B,EAAK6F,SAAS,CAAEyC,YAVjB,yD,uDAgBP,OAAIlI,IACO,cAAC0K,EAAA,EAAD,CAAUpG,GAAG,MAEpB,gCACI,wCACA,uBAAM6F,SAAU3G,KAAKmF,aAArB,UAEKnF,KAAK2F,YAAY,WAAY,YAC7B3F,KAAK2F,YAAY,WAAY,WAAY,YACzC3F,KAAKyF,aAAa,oB,GAtCfhB,I,MCDjB,SAAS0C,GAASlG,GACrB,OAAO9E,EAAKb,KAHI,SAGc,CAC1B,MAAS2F,EAAK4F,SACd,SAAY5F,EAAKhF,SACjB,KAAQgF,EAAKQ,O,ICsDN2F,G,4MAvDXvF,MAAQ,CACJzF,KAAM,CACFyK,SAAU,GACV5K,SAAU,GACVwF,KAAM,IAEViD,OAAQ,I,EAEZG,OAAS,CACLgC,SAAUjC,KAAIqB,SACTC,WACAxF,MAAM,YACN1E,QACLC,SAAU2I,KAAIqB,SACToB,WACAjB,IAAI,GACJF,WACAxF,MAAM,YACXe,KAAMmD,KAAIqB,SAASC,WAAWxF,MAAM,S,EAIxC2E,S,sBAAW,4BAAAnJ,EAAA,+EAEoBoL,GAAqB,EAAKzF,MAAMzF,MAFpD,OAGHG,EAHG,OAGmBZ,QAAQ,iBAC9BoL,OAAOD,SAAW,IAJf,gDAOC,KAAGlM,UAAmC,MAAvB,KAAGA,SAASG,UACrB2J,EADqC,eACvB,EAAK7C,MAAM6C,SACxBmC,SAAW,KAAGjM,SAASwB,KAC9B,EAAK6F,SAAS,CAAEyC,YAVjB,yD,uDAeP,OACI,gCACI,2CACA,uBAAMiC,SAAU3G,KAAKmF,aAArB,UAEKnF,KAAK2F,YAAY,WAAY,YAC7B3F,KAAK2F,YAAY,WAAY,WAAY,YACzC3F,KAAK2F,YAAY,OAAQ,QAEzB3F,KAAKyF,aAAa,oB,GA/ChBhB,ICOR8C,G,kLxB4BXlL,aAAamL,WAAW1L,GwBpCpBiL,OAAOD,SAAW,M,+BAIlB,OAAO,S,GAPM5G,aCgBNuH,GAfQ,SAAC,GAAqD,IAAnD5H,EAAkD,EAAlDA,KAAiBK,EAAiC,EAA5CwH,UAAsBC,EAAsB,EAAtBA,OAAWvD,EAAW,8CACxE,OACI,cAACwD,EAAA,EAAD,yBAAO/H,KAAMA,GACLuE,GADR,IAEIuD,OAAQ,SAAAvK,GACJ,OAAKZ,IAKE0D,EAAY,cAACA,EAAD,eAAe9C,IAAYuK,EAAOvK,GAJ1C,cAAC8J,EAAA,EAAD,CAAUpG,GAAI,CACjBmG,SAAU,SACVpF,MAAO,CAAEmF,KAAM5J,EAAM0J,kBCmE9Be,G,4MA9DbhG,MAAQ,G,kEAEN,IAAMZ,EAAOzE,IACbxB,QAAQC,IAAI,UAAYgG,GACxBjB,KAAKiC,SAAS,CAAEhB,W,+BAER,IAAD,OACUjB,KAAK6B,MAAdZ,KAER,OACE,uBAAMlD,UAAU,YAAhB,UACE,cAAE,iBAAF,IACA,cAAC,EAAD,CAAQkD,KAAMjB,KAAK6B,MAAMZ,OACzB,eAAC6G,EAAA,EAAD,WACE,cAACF,EAAA,EAAD,CAAO/H,KAAK,WACV6H,UAAWxD,KAEb,cAAC0D,EAAA,EAAD,CAAO/H,KAAK,aACV6H,UAAWzD,KAEb,cAAC2D,EAAA,EAAD,CAAO/H,KAAK,SACV6H,UAAWd,KAEb,cAACgB,EAAA,EAAD,CAAO/H,KAAK,UACV6H,UAAWH,KAOb,cAAC,GAAD,CACE1H,KAAK,cACL6H,UAAW7B,KAEb,cAAC+B,EAAA,EAAD,CAAO/H,KAAK,UACV8H,OAAQ,SAAAvK,GAAK,OACX,cAAC,EAAD,2BAAYA,GAAZ,IACE6D,KAAM,EAAKY,MAAMZ,WAGvB,cAAC2G,EAAA,EAAD,CAAO/H,KAAK,YACV6H,UAAWN,KAEb,cAACQ,EAAA,EAAD,CAAO/H,KAAK,YACV6H,UAAW1D,IAEb,cAACkD,EAAA,EAAD,CAAUa,OAAK,EACbf,KAAK,IACLlG,GAAG,YAEL,cAACoG,EAAA,EAAD,CAAUpG,GAAG,wB,GApDLZ,aCJH8H,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCEdjN,QAAQC,IAAIP,sMAEZ+N,IAASd,OACP,cAACe,GAAA,EAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.1d3e4867.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport function setJWT(jwt) {\r\n    axios.defaults.headers.common['x-auth-token'] = jwt;\r\n}\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n    if (!expectedError) {\r\n        console.log(error)\r\n        toast.error(\"Unexpected Went Wrong\")\r\n    }\r\n    return Promise.reject(error)\r\n})\r\n\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJWT\r\n}","//import { apiBaseUrl } from '../config.json';\r\nimport http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndpoint = \"/auth\"\r\nconst tokenKey = \"token\"\r\n\r\nexport async function login(email, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, {\r\n        \"email\": email,\r\n        \"password\": password,\r\n    })\r\n    localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport async function loginWithJWT(jwt) {\r\n    localStorage.setItem(tokenKey, jwt)\r\n}\r\n\r\nexport function getJWT() {\r\n    // try {\r\n    return localStorage.getItem(tokenKey)\r\n    // }catch (ex) { return null}\r\n}\r\n\r\nhttp.setJWT(getJWT())\r\n\r\nexport function getCurrentUser() {\r\n    try {\r\n        console.log(\"getCurrentUser\")\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        console.log(\"jwt\" + jwt)\r\n\r\n        return jwtDecode(jwt);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function logout() {\r\n    localStorage.removeItem(tokenKey)\r\n}","import http from './httpService'\r\n//import { apiBaseUrl } from '../config.json';\r\n\r\nexport function getGenres() {\r\n    return http.get(\"/genres\")\r\n    // return genres.filter(g => g);\r\n}\r\n","import http from './httpService'\r\n//import { apiBaseUrl } from '../config.json';\r\nimport { getGenres } from './genreServices';\r\n\r\nconst apiEndpoint = \"/movies\"\r\n\r\nexport function getMovies() {\r\n    return http.get(apiEndpoint)\r\n}\r\n\r\nexport function deleteMovie(id) {\r\n    return http.delete(apiEndpoint + \"/\" + id)\r\n}\r\n\r\nexport function getMovie(id) {\r\n    return http.get(apiEndpoint + \"/\" + id)\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n\r\n    if (movie._id) {\r\n        const body = { ...movie }\r\n        delete body._id\r\n        return http.put(apiEndpoint + \"/\" + movie._id, body)\r\n    }\r\n\r\n    return http.post(apiEndpoint, movie)\r\n        ;\r\n}","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Pagination = (props) => {\r\n    const { itemCount, pageSize, currentPage, onPageChange } = props;\r\n    const pageCount = Math.ceil(itemCount / pageSize);\r\n    if (pageCount === 1) return null;\r\n    const pages = _.range(1, pageCount + 1);\r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map(page =>\r\n                    <li className={page === currentPage ? \"page-item active\" : \"page-item\"} key={page}>\r\n                        <a\r\n                            className=\"page-link\"\r\n                            onClick={() => onPageChange(page)} >\r\n                            {page}\r\n                        </a>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </nav>);\r\n}\r\n\r\nPagination.propTypes = {\r\n    itemCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    currentPage: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nconst ListGroup = (props) => {\r\n    const { items, onItemSelect, selectedItem, valueprop, textprop } = props;\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map(item =>\r\n                <li\r\n                    key={item[valueprop]}\r\n                    className={selectedItem === item ? \"list-group-item active\" : \"list-group-item\"}\r\n                    onClick={() => onItemSelect(item)}>\r\n                    {item[textprop]}\r\n                </li>\r\n            )}\r\n        </ul>);\r\n}\r\n\r\nListGroup.defaultProps = {\r\n    valueprop: \"_id\",\r\n    textprop: \"name\"\r\n}\r\n\r\nexport default ListGroup;","import _ from 'lodash';\r\n\r\nexport function paginate(items, pageNumber, pageSize, selectedGenre) {\r\n    const index = (pageNumber - 1) * pageSize;\r\n    return _(items) //convert array to lodash wrapper to chain methods\r\n        .slice(index)\r\n        .take(pageSize)\r\n        .value(); // convert lodach wrapper to array\r\n}","import React, { Component } from 'react';\r\n\r\nconst Favorite = (props) => {\r\n    let classes = \"fa fa-heart\";\r\n    if (!props.liked)\r\n        classes += \"-o\";\r\n    return (\r\n        <i\r\n            onClick={props.onClickLike}\r\n            className={classes}\r\n            style={{ cursor: \"pointer\" }}\r\n            aria-hidden=\"true\"></i>\r\n    );\r\n}\r\n\r\nexport default Favorite;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\n\r\nclass TableBody extends Component {\r\n\r\n    renderCell = (item, column) => {\r\n        if (column.content)\r\n            return column.content(item)\r\n        return _.get(item, column.path)\r\n    }\r\n\r\n    createKey = (item, column) => {\r\n        return item._id + (column.path || column.key)\r\n    }\r\n\r\n    render() {\r\n        const { data, columns } = this.props;\r\n        return (\r\n            <tbody>\r\n                {data.map((item) => (\r\n                    <tr key={item._id}>\r\n                        {columns.map((column) => (\r\n                            <td key={this.createKey(item, column)}>\r\n                                {this.renderCell(item, column)}\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                ))}\r\n\r\n            </tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableBody;","import React, { Component } from 'react';\r\n\r\nclass TableHeader extends Component {\r\n    raiseSort = (path) => {\r\n        const sortColumn = { ...this.props.sortColumn };\r\n\r\n        if (sortColumn.path === path) {\r\n            sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n        } else {\r\n            sortColumn.path = path;\r\n            sortColumn.order = \"asc\";\r\n        }\r\n        this.props.onSort(sortColumn);\r\n    };\r\n\r\n    renderSortIcon = (column) => {\r\n        const { sortColumn } = this.props;\r\n        if (column.path !== sortColumn.path) return null;\r\n        if (sortColumn.order === \"asc\") return <i className='fa fa-sort-asc' />;\r\n        return <i className='fa fa-sort-desc' />;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <thead>\r\n                <tr>\r\n                    {this.props.columns.map(c =>\r\n                        <th style={{ cursor: \"pointer\" }}\r\n                            key={c.path || c.key}\r\n                            onClick={() => this.raiseSort(c.path)}>\r\n                            {c.label}\r\n                            {this.renderSortIcon(c)}\r\n                        </th>\r\n                    )}\r\n                </tr>\r\n            </thead>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableHeader;","import React from 'react';\r\nimport TableBody from './tableBody';\r\nimport TableHeader from './tableHeader'\r\n\r\nconst Table = (props) => {\r\n    const { columns, sortColumn, data, onSort } = props\r\n    return (\r\n        <table className=\"table\">\r\n            <TableHeader\r\n                columns={columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n            />\r\n            <TableBody data={data} columns={columns} />\r\n\r\n        </table>);\r\n}\r\n\r\nexport default Table;","import React, { Component } from 'react';\r\nimport Favorite from './common/favorite';\r\nimport Table from './common/table';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCurrentUser } from '../services/authService'\r\n\r\n\r\nclass MoviesTable extends Component {\r\n\r\n    columns = [\r\n        {\r\n            path: \"title\",\r\n            label: \"Title\",\r\n            content: movie =>\r\n                <Link to={`/movies/${movie._id}`} >\r\n                    {movie.title}\r\n                </Link>\r\n        },\r\n        { path: \"genre.name\", label: \"Genre\" },\r\n        { path: \"numberInStock\", label: \"Stock\" },\r\n        { path: \"dailyRentalRate\", label: \"Rate\" },\r\n        {\r\n            key: \"like\",\r\n            content: movie => <Favorite\r\n                liked={movie.liked}\r\n                onClickLike={() => this.props.onLike(movie)} />\r\n        },\r\n    ]\r\n    constructor() {\r\n        super();\r\n        const user = getCurrentUser()\r\n        if (user && user.isAdmin) {\r\n            console.log(\"is admin yall\")\r\n            this.columns.push({\r\n                key: \"delete\",\r\n                content: movie => <button\r\n                    className=\"btn btn-sm btn-danger\"\r\n                    onClick={() => { this.props.onDelete(movie) }}>\r\n                    delete</button>\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { movies, sortColumn, onSort } = this.props;\r\n        return (\r\n            <Table columns={this.columns}\r\n                sortColumn={sortColumn}\r\n                onSort={onSort}\r\n                data={movies} />\r\n            // <table className=\"table\">\r\n            //     {/* <TableHeader\r\n            //         columns={this.columns}\r\n            //         sortColumn={sortColumn}\r\n            //         onSort={onSort}\r\n            //     />\r\n            //     <TableBody data={movies} columns={this.columns} /> */}\r\n            //     <Table columns={this.columns}\r\n            //         sortColumn={sortColumn}\r\n            //         onSort={onSort}\r\n            //         data={movies} />\r\n\r\n            // </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviesTable;","import React from 'react';\r\nconst SearchBox = ({ value, onChange }) => {\r\n    return (\r\n        <input\r\n            type='text'\r\n            name='query'\r\n            className='form-control m-3'\r\n            placeholder=\"Search ...\"\r\n            value={value}\r\n            onChange={e => onChange(e.currentTarget.value)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport { getMovies, deleteMovie } from '../services/movieService';\r\nimport { getGenres } from '../services/genreServices';\r\nimport Pagination from './common/pagination'\r\nimport ListGroup from './common/listGroup'\r\nimport { paginate } from \"../utils/paginate\";\r\nimport MoviesTable from './moviesTable';\r\nimport _ from 'lodash';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchBox from './common/searchBox'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        movies: [],\r\n        genres: [],\r\n        currentPage: 1,\r\n        pageSize: 4,\r\n        sortColumn: { path: 'title', order: 'asc' },\r\n        selectedGenre: null,\r\n        searchQuery: '',\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { data } = await getGenres()\r\n        const genres = [{ _id: \"\", name: \"All Movies\" }, ...data];\r\n        const { data: movies } = await getMovies()\r\n        this.setState({ movies, genres })\r\n    }\r\n    render() {\r\n        const { length: count } = this.state.movies;\r\n        const { user } = this.props;\r\n\r\n        const { searchQuery, currentPage, pageSize, movies: allMovies, selectedGenre, sortColumn } = this.state;\r\n\r\n        const filteredMovies = selectedGenre && selectedGenre._id\r\n            ? allMovies.filter(m => m.genre._id === selectedGenre._id)\r\n            : allMovies\r\n        const sortedMovies = _.orderBy(filteredMovies, [sortColumn.path], [sortColumn.order]);\r\n        const movies = paginate(sortedMovies, currentPage, pageSize, selectedGenre);\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-2\">\r\n                    <ListGroup\r\n                        items={this.state.genres}\r\n                        // valueprop=\"_id\"\r\n                        // textprop=\"name\" //default values\r\n                        onItemSelect={this.handleGenreSelection}\r\n                        selectedItem={selectedGenre} />\r\n                </div>\r\n                <div className=\"col\">\r\n\r\n                    <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n                    {user && (<Link\r\n                        className=\"btn btn-primary\"\r\n                        to='/movies/new'> Add Movie\r\n                    </Link>)\r\n                    }\r\n                    <p> There are {filteredMovies.length} movies</p>\r\n\r\n                    <MoviesTable\r\n                        movies={movies}\r\n                        onDelete={this.deleteHandler}\r\n                        onLike={this.likeHandler}\r\n                        onSort={this.sortHandler}\r\n                        sortColumn={sortColumn}\r\n\r\n                    />\r\n                    <Pagination\r\n                        itemCount={filteredMovies.length}\r\n                        pageSize={pageSize}\r\n                        currentPage={currentPage}\r\n                        onPageChange={this.handlePageChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    sortHandler = (sortColumn) => {\r\n        this.setState({ sortColumn })\r\n    }\r\n\r\n    handlePageChange = (page) => {\r\n        this.setState({ currentPage: page });\r\n        console.log(\"handlePageChange\");\r\n    }\r\n\r\n    likeHandler = (movie) => {\r\n        const movies = [...this.state.movies];\r\n        const index = movies.indexOf(movie);\r\n        movies[index] = { ...movies[index] }\r\n\r\n        movies[index].liked = movie.liked ? !movie.liked : true;\r\n        this.setState({ movies });\r\n        console.log('clicked')\r\n    }\r\n\r\n    getPagedData = () => {\r\n        const {\r\n            currentPage,\r\n            pageSize,\r\n            sortColumn,\r\n            selectedGenre,\r\n            searchQuery,\r\n            movies: allMovies } = this.state\r\n        let filtred = allMovies\r\n        if (searchQuery)\r\n            filtred = allMovies.filter(m =>\r\n                m.title.toLowerCase().startsWith(searchQuery.toLowerCase()))\r\n        else if (selectedGenre && selectedGenre._id)\r\n            filtred = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n        const sorted = _.orderBy(filtred, [sortColumn.path], [sortColumn.order]);\r\n        const movies = paginate(sorted, currentPage, pageSize);\r\n        return { totalCount: filtred.length, data: movies }\r\n    }\r\n\r\n    sortHandler = (sortColumn) => {\r\n        this.setState({ sortColumn })\r\n    }\r\n\r\n    handleSearch = (query) => {\r\n        this.setState({ selectedGenre: null, searchQuery: query, currentPage: 1 })\r\n    }\r\n\r\n    deleteHandler = async (movie) => {\r\n        const originalMovies = this.state.movies\r\n        const movies = originalMovies.filter(m => m._id !== movie._id);\r\n        this.setState({ movies });\r\n\r\n        try {\r\n            await deleteMovie(movie._id)\r\n        }\r\n        catch (exc) {\r\n            if (exc.response && exc.response.status === 404)\r\n                toast.error('this movie is already delete.')\r\n            this.setState({ movies: originalMovies });\r\n        }\r\n    }\r\n\r\n    handleGenreSelection = (genre) => {\r\n        this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: '' });\r\n        // created in the state once the handler works\r\n\r\n        console.log('handleGenreSelection');\r\n    }\r\n    handleSave = () => {\r\n        this.props.history.push('/movies')\r\n    }\r\n\r\n}\r\n\r\nexport default Movies;\r\n\r\n","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\n\r\nconst NavBar = ({ user }) => {\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    Vidly </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n                        <NavLink\r\n                            className=\"nav-item nav-link\"\r\n                            to=\"/movies\"\r\n                        >\r\n                            Movies\r\n                            </NavLink>\r\n\r\n                        <NavLink\r\n                            className=\"nav-item nav-link\"\r\n                            to=\"/costumers\"\r\n                        >\r\n                            Costumers\r\n                            </NavLink>\r\n\r\n                        <NavLink\r\n                            className=\"nav-item nav-link\"\r\n                            to=\"/rentals\"\r\n                        >\r\n                            Rentals\r\n                            </NavLink>\r\n\r\n                        {!user && (<React.Fragment>\r\n                            <NavLink\r\n                                className=\"nav-item nav-link\"\r\n                                to=\"/login\"\r\n                            >\r\n                                LogIn\r\n                            </NavLink>\r\n\r\n                            <NavLink\r\n                                className=\"nav-item nav-link\"\r\n                                to=\"/register\"\r\n                            >\r\n                                Register\r\n                            </NavLink>\r\n                        </React.Fragment>)}\r\n\r\n                        {user && (<React.Fragment>\r\n                            <NavLink\r\n                                className=\"nav-item nav-link\"\r\n                                to=\"/profile\"\r\n                            >\r\n                                {user.name}\r\n                            </NavLink>\r\n\r\n                            <NavLink\r\n                                className=\"nav-item nav-link\"\r\n                                to=\"/logout\"\r\n                            >\r\n                                Log Out\r\n                            </NavLink>\r\n                        </React.Fragment>)}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                NotFound\r\n        </h1>\r\n        </div>);\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nclass Costumers extends Component {\r\n    state = {}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    Costumers\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Costumers;","import React from 'react';\r\n\r\nconst Rentals = () => {\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Rentals\r\n            </h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Rentals;","import React from 'react';\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                // value={value} onChange={onChange} type={type}\r\n                {...rest}\r\n                name={name}\r\n                id={name}\r\n                className=\"form-control\"\r\n            />\r\n            { error && <div className=\"alert alert-danger\">\r\n                {error}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <select name={name} id={name} {...rest} className=\"form-control\">\r\n                <option value=\"\" />\r\n                {options.map(option => (\r\n                    <option key={option._id} value={option._id}>\r\n                        {option.name}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            {error && <div className=\"alert alert-danger\">{error}</div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Select;","import React, { Component } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Input from './input';\r\nimport Select from './select';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        data: {},\r\n        errors: {}\r\n    }\r\n\r\n    validate = () => {\r\n        const { error } = Joi.validate(this.state.data, this.schema, { abortEarly: false })\r\n        console.log(error);\r\n        console.log(\"this.state.data\" + this.state.data)\r\n        if (!error) return null;\r\n        const errors = {};\r\n        for (let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n        // const errors = {};\r\n        // const { data } = this.state\r\n        // if (data.username.trim() === \"\")\r\n        //     errors.username = \"username required\";\r\n        // return Object.keys.length === 0 ? null : errors;\r\n    }\r\n\r\n    validateProperty = ({ name, value }) => {\r\n        const obj = { [name]: value }\r\n        const schema = { [name]: this.schema[name] }\r\n        const { error } = Joi.validate(obj, schema)\r\n        return error ? error.details[0].message : null\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const errors = this.validate();\r\n        this.setState({\r\n            errors: errors || {}\r\n        });\r\n        if (errors) return;\r\n        this.doSubmit()\r\n        console.log(\"submit \")\r\n    }\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const errors = { ...this.state.errors }\r\n        const errorMsg = this.validateProperty(input);\r\n        if (errorMsg) errors[input.name] = errorMsg;\r\n        else delete errors[input.name];\r\n        const data = { ...this.state.data }\r\n        data[input.name] = input.value\r\n        this.setState({ data, errors })\r\n    }\r\n\r\n    renderButton = (label) => {\r\n        return <button\r\n            disabled={this.validate()}\r\n            className=\"btn btn-primary\">\r\n            {label}\r\n        </button>\r\n    }\r\n    renderInput = (name, label, type = 'text') => {\r\n        const { data, errors } = this.state;\r\n        return (\r\n            < Input\r\n                type={type}\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                error={errors[name]}\r\n                onChange={this.handleChange}\r\n            />);\r\n    }\r\n    renderSelect = (name, label, options) => {\r\n\r\n        const { data, errors } = this.state;\r\n        return <Select\r\n            name={name}\r\n            value={data[name]}\r\n            label={label}\r\n            options={options}\r\n            onChange={this.handleChange}\r\n            error={errors[name]}\r\n        />\r\n    }\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\nimport { getGenres } from '../services/genreServices';\r\n//import { } from '../services/fakeMovieService';\r\nimport { saveMovie, getMovie } from '../services/movieService';\r\n\r\nclass MovieForm extends Form {\r\n    state = {\r\n        data: {\r\n            title: '',\r\n            dailyRentalRate: '',\r\n            numberInStock: '',\r\n            genreId: ''\r\n        },\r\n        genres: [],// get them from server in componentDidMount \r\n        errors: {}\r\n    }\r\n    schema = {\r\n        _id: Joi.string(),\r\n        title: Joi.string()\r\n            .required()\r\n            .label('Title'),\r\n        genreId: Joi.string()\r\n            .required()\r\n            .label('Genre'),\r\n        dailyRentalRate: Joi.number()\r\n            .min(0)\r\n            .max(10)\r\n            .required()\r\n            .label('Daily Rental Rate'),\r\n        numberInStock: Joi.number()\r\n            .min(0)\r\n            .max(100)\r\n            .required()\r\n            .label('Number In Stock'),\r\n\r\n    }\r\n    async componentDidMount() {\r\n        // populate genres\r\n        const { data: genres } = await getGenres();\r\n        this.setState({ genres });\r\n\r\n        // populate movies\r\n        const movieId = this.props.match.params.id;\r\n        if (movieId === \"new\")\r\n            return; // we don't want to add an existing object \r\n        try {\r\n            const { data: movie } = await getMovie(movieId);\r\n            this.setState({ data: this.mapToViewModel(movie) })\r\n\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 404)\r\n                return this.props.history.replace(\"/NotFound\")\r\n        }\r\n    }\r\n\r\n    mapToViewModel(movie) {\r\n        return {\r\n            _id: movie._id,\r\n            title: movie.title,\r\n            genreId: movie.genre._id,\r\n            numberInStock: movie.numberInStock,\r\n            dailyRentalRate: movie.dailyRentalRate\r\n        }\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        await saveMovie(this.state.data)\r\n        console.log(\"movie data \" + this.state.data)\r\n        this.props.history.push(\"/movies\")\r\n        console.log(\"handler Submited\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Movie </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    {this.renderInput('title', 'title',)}\r\n                    {this.renderSelect('genreId', 'Genre', this.state.genres)}\r\n                    {this.renderInput('numberInStock', 'Number In Stock', 'number')}\r\n                    {this.renderInput('dailyRentalRate', 'Rate')}\r\n\r\n                    {this.renderButton('Save')}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// handleSave = () => {\r\n//     this.props.history.push('/movies')\r\n// }\r\n// render() {\r\n//     return (<di>\r\n//         <h1> MovieForm id:{this.props.match.params.id}</h1>\r\n//         <button\r\n//             className=\"btn btn-primary\"\r\n//             onClick={this.handleSave}>save</button>\r\n//     </di>);\r\n// }\r\nexport default MovieForm;","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Form from './common/form';\r\nimport { login, getCurrentUser } from \"../services/authService\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: {\r\n            username: '',\r\n            password: ''\r\n        },\r\n        errors: {}\r\n    }\r\n    schema = {\r\n        username: Joi.string().required().label('Username'),\r\n        password: Joi.string().required().label('Password'),\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;\r\n            await login(data.username, data.password)\r\n            const { state } = this.props.location\r\n            window.location = state ? state.from.pathname : '/'\r\n        } catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors }\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if (getCurrentUser())\r\n            return <Redirect to=\"/\" />\r\n        return (\r\n            <div>\r\n                <h1>Login </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    {this.renderInput('username', 'Username')}\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n                    {this.renderButton('Submit')}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginForm;","import http from './httpService'\r\nimport { apiBaseUrl } from '../config.json';\r\n\r\nconst apiEndpoint = \"/users\"\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, {\r\n        \"email\": user.username,\r\n        \"password\": user.password,\r\n        \"name\": user.name\r\n    })\r\n\r\n}\r\n","import React from 'react';\r\nimport Form from './common/form';\r\nimport Joi from 'joi-browser';\r\nimport * as userService from \"../services/userService\"\r\nimport { loginWithJWT } from \"../services/authService\";\r\n\r\n\r\nclass Register extends Form {\r\n    state = {\r\n        data: {\r\n            username: '',\r\n            password: '',\r\n            name: ''\r\n        },\r\n        errors: {}\r\n    }\r\n    schema = {\r\n        username: Joi.string()\r\n            .required()\r\n            .label('Username')\r\n            .email(),\r\n        password: Joi.string()\r\n            .alphanum()\r\n            .min(5)\r\n            .required()\r\n            .label('Password'),\r\n        name: Joi.string().required().label('name'),\r\n\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const response = await userService.register(this.state.data)\r\n            loginWithJWT(response.headers['x-auth-token'])\r\n            window.location = '/'\r\n        }\r\n        catch (ex) {\r\n            if (ex.response && ex.response.status === 400) {\r\n                const errors = { ...this.state.errors }\r\n                errors.username = ex.response.data;\r\n                this.setState({ errors })\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Register </h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n\r\n                    {this.renderInput('username', 'Username',)}\r\n                    {this.renderInput('password', 'Password', 'password')}\r\n                    {this.renderInput('name', 'Name')}\r\n\r\n                    {this.renderButton('Submit')}\r\n\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React, { Component } from 'react';\r\nimport { logout } from \"../../services/authService\";\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        logout();\r\n        window.location = '/'\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Logout;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { getCurrentUser } from '../../services/authService'\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n    return (\r\n        <Route path={path}\r\n            {...rest}\r\n            render={props => {\r\n                if (!getCurrentUser())\r\n                    return <Redirect to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: props.location }\r\n                    }} />;\r\n                return Component ? <Component {...props} /> : render(props)\r\n            }}\r\n        />);\r\n}\r\n\r\nexport default ProtectedRoute;","import './App.css';\nimport React, { Component } from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify'\nimport { getCurrentUser } from './services/authService'\nimport Movies from './components/movies';\nimport NavBar from './components/common/navBar';\nimport NotFound from './components/common/notFound';\nimport Costumers from './components/costumers';\nimport Rentals from './components/rentals';\nimport MovieForm from './components/movieForm';\nimport LoginForm from './components/loginForm';\nimport Register from './components/register';\nimport Logout from './components/common/logout';\nimport ProtectedRoute from './components/common/protectedRoute';\n\nclass App extends Component {\n  state = {}\n  componentDidMount() {\n    const user = getCurrentUser()\n    console.log(\"user  =\" + user)\n    this.setState({ user })\n  }\n  render() {\n    const { user } = this.state //for protected routes\n\n    return (\n      <main className=\"container\">\n        < ToastContainer />\n        <NavBar user={this.state.user} />\n        <Switch>\n          <Route path=\"/rentals\"\n            component={Rentals} />\n\n          <Route path=\"/costumers\"\n            component={Costumers} />\n\n          <Route path=\"/login\"\n            component={LoginForm} />\n\n          <Route path=\"/logout\"\n            component={Logout} />\n          {/* <Route path='/movies/new'\n          component={MovieForm} /> */}\n\n          {/* <Route path=\"/movies/:id\"\n            component={MovieForm} /> */}\n\n          <ProtectedRoute\n            path=\"/movies/:id\"\n            component={MovieForm} />\n\n          <Route path=\"/movies\"\n            render={props =>\n              <Movies {...props}\n                user={this.state.user} />}\n          />\n\n          <Route path=\"/register\"\n            component={Register} />\n\n          <Route path=\"/NotFound\"\n            component={NotFound} />\n\n          <Redirect exact\n            from=\"/\"\n            to=\"/movies\" />\n\n          <Redirect to=\"/NotFound\" />\n\n        </Switch>\n\n      </main>\n    );\n  }\n\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nconsole.log(process.env);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}